package com.example.ironplan_fitness;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.example.ironplan_fitness.Controller.UserSingleton;
import com.example.ironplan_fitness.Model.User;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.example.ironplan_fitness.Controller.FirebaseDatabaseHelper;


import java.util.HashMap;

public class SignUp extends AppCompatActivity {

    private EditText fullNameEditText;
    private EditText emailEditText;
    private EditText passwordEditText;
    private EditText confirmPasswordEditText;
    private Button signUpButton;
    private ProgressBar progressBar;

    private FirebaseAuth mAuth;
    private DatabaseReference mDatabase;

    private FirebaseDatabase database;

    private static final String USER = "users";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_in);

        // Enable Firebase Realtime Database persistence
        try {
            FirebaseDatabase.getInstance().setPersistenceEnabled(false);
        } catch (Exception e) {}

        // Initialize Firebase Auth and Database
        mAuth = FirebaseAuth.getInstance();
        database = FirebaseDatabase.getInstance();
        mDatabase = database.getReference(USER);





        fullNameEditText = findViewById(R.id.signUp_editTextFullName);
        emailEditText = findViewById(R.id.signInEditTextEmail);
        passwordEditText = findViewById(R.id.SignInEditTextPassword);
        confirmPasswordEditText = findViewById(R.id.SignInEditTextPasswordConfirm);
        signUpButton = findViewById(R.id.SignInButton);
        progressBar = findViewById(R.id.progress_bar_signIN);

        signUpButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String fullName = fullNameEditText.getText().toString().trim();
                String email = emailEditText.getText().toString().trim();
                String password = passwordEditText.getText().toString().trim();
                String confirmPassword = confirmPasswordEditText.getText().toString().trim();

                // Check if any field is empty
                if (TextUtils.isEmpty(fullName) || TextUtils.isEmpty(email) || TextUtils.isEmpty(password) || TextUtils.isEmpty(confirmPassword)) {
                    Toast.makeText(SignUp.this, "All fields are required", Toast.LENGTH_SHORT).show();
                    return;
                }

                // Check if passwords match
                if (!password.equals(confirmPassword)) {
                    Toast.makeText(SignUp.this, "Passwords do not match", Toast.LENGTH_SHORT).show();
                    return;
                }

                // Sign up user
                signUpUser(fullName, email, password);
            }
        });
    }

    private void signUpUser(String fullName, String email, String password) {
        progressBar.setVisibility(View.VISIBLE); // Show progress bar

        mAuth.createUserWithEmailAndPassword(email, password)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        progressBar.setVisibility(View.GONE); // Hide progress bar

                        if (task.isSuccessful()) {
                            // Sign up success, update UI with the signed-up user's information
                            FirebaseUser firebaseUser = mAuth.getCurrentUser();
                            if (firebaseUser != null) {
                                String uid = firebaseUser.getUid(); // Get the UID generated by Firebase Authentication

                                // Create a user object with full name
                                User user = new User(fullName);

                                // Store the user object in the database under the user's UID
                                mDatabase.child(uid).setValue(user);

                                // Store user data in Singleton class
                                UserSingleton.getInstance().setFullName(fullName);
                                UserSingleton.getInstance().setEmail(email);
                                UserSingleton.getInstance().setUid(uid);

                                // Redirect to the home activity
                                startActivity(new Intent(SignUp.this, Home.class));
                                finish(); // Finish the sign-up activity
                            }
                        } else {
                            // If sign up fails, display a message to the user.
                            Toast.makeText(SignUp.this, "Authentication failed: " + task.getException().getMessage(),
                                    Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }



    private void saveUserDataToDatabase(String userID, String fullName) {
        // Create a FirebaseDatabaseHelper instance
        FirebaseDatabaseHelper databaseHelper = FirebaseDatabaseHelper.getInstance();
        User user = new User(fullName);

        // Write user data to the database using the FirebaseDatabaseHelper
        databaseHelper.writeData("users/" , user );
    }


    public void onLoginClick(View view) {
        // Handle click event here, e.g., navigate to the login activity
        startActivity(new Intent(this, LogIn.class));
        finish(); // Optional: finish the current activity
    }
}
